# Run the 'rke up' from the build node
# https://rancher.com/docs/rke/latest/en/config-options/
nodes:
  - address: [HOST1] 
    internal_address:
    hostname_override: rnode-01
    role: [controlplane, etcd, worker]
    user: root 
    ssh_key_path: /root/.ssh/id_rsa
  - address: [HOST2] 
    internal_address:
    hostname_override: rnode-02
    role: [worker]
    user: root 
    ssh_key_path: /root/.ssh/id_rsa
  - address: [HOST3] 
    internal_address:
    hostname_override: rnode-03
    role: [worker]
    user: root 
    ssh_key_path: /root/.ssh/id_rsa

# using a local ssh agent
# Using SSH private key with a passphrase - eval `ssh-agent -s` && ssh-add
# ssh_agent_auth: true

#  SSH key that access all hosts in your cluster
ssh_key_path: /home/ubuntu/.ssh/id_rsa

# By default, the name of your cluster will be local
# Set different Cluster name
cluster_name: incubator-rke

# Fail for Docker version not supported by Kubernetes
ignore_docker_version: false

# prefix_path: /opt/custom_path

# Set kubernetes version to install: https://rancher.com/docs/rke/latest/en/upgrades/#listing-supported-kubernetes-versions

# Check with -> rke config --list-version --all
kubernetes_version:

# Etcd snapshots
services:
 etcd:
   backup_config:
     interval_hours: 12
     retention: 6
   snapshot: true
   creation: 6h
   retention: 24h

kube-api:
 # IP range for any services created on Kubernetes
 #  This must match the service_cluster_ip_range in kube-controller
 service_cluster_ip_range: 10.96.0.0/12
 # Expose a different port range for NodePort services
 service_node_port_range: 30000-32767
 pod_security_policy: false

kube-controller:
 # CIDR pool used to assign IP addresses to pods in the cluster
 cluster_cidr: 10.32.0.0/12

 # IP range for any services created on Kubernetes
 # # This must match the service_cluster_ip_range in kube-api
 service_cluster_ip_range: 10.96.0.0/12

kubelet:
 # Base domain for the cluster
 cluster_domain: cluster.local

 # IP address for the DNS service endpoint
 cluster_dns_server: 10.96.0.10

 # Fail if swap is on
 fail_swap_on: false

 # Set max pods to 150 instead of default 110
 extra_args:
   max-pods: 150

# Added this timeout due to the network plugin element failing using the default:
 addon_job_timeout: 60
  
# Configure  network plug-ins
# RKE provides the following network plug-ins that are deployed as add-ons: flannel, calico, weave, and canal
# After you launch the cluster, you cannot change your network provider.

# Setting the network plug-in
network:
   plugin: none
   options:

# Specify DNS provider (coredns or kube-dns)
dns:
 provider: coredns

# Currently, only authentication strategy supported is x509.
# You can optionally create additional SANs (hostnames or IPs) to
# add to the API server PKI certificate.
# This is useful if you want to use a load balancer for the
# control plane servers.
authentication:
 strategy: x509
 sans:
  - "dev.example.com"

# Set Authorization mechanism
authorization:
# Use `mode: none` to disable authorization
# mode: rbac
     mode: none

# Currently only nginx ingress provider is supported.
# To disable ingress controller, set `provider: none`
# `node_selector` controls ingress placement and is optional
ingress:
 provider: none
#options:
#  use-forwarded-headers: "true"

